//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.amap_map_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.platform.PlatformViewRegistry;

import me.yohom.amap_map_fluttify.AmapMapFluttifyPlugin.Handler;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler8 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // method
            put("com.autonavi.amap.mapcore.interfaces.IPolyline::getPoints", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IPolyline ref = (com.autonavi.amap.mapcore.interfaces.IPolyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IPolyline@" + refId + "::getPoints(" + "" + ")");
                }
            
                // invoke native method
                java.util.List<com.amap.api.maps.model.LatLng> __result__;
                try {
                    __result__ = ref.getPoints();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.model.LatLng item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IPolyline::isGeodesic", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IPolyline ref = (com.autonavi.amap.mapcore.interfaces.IPolyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IPolyline@" + refId + "::isGeodesic(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isGeodesic();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IPolyline::setGeodesic", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IPolyline ref = (com.autonavi.amap.mapcore.interfaces.IPolyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IPolyline@" + refId + "::setGeodesic(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setGeodesic(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IPolyline::setDottedLine", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IPolyline ref = (com.autonavi.amap.mapcore.interfaces.IPolyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IPolyline@" + refId + "::setDottedLine(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDottedLine(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IPolyline::isDottedLine", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IPolyline ref = (com.autonavi.amap.mapcore.interfaces.IPolyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IPolyline@" + refId + "::isDottedLine(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isDottedLine();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IPolyline::getNearestLatLng", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var1 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IPolyline ref = (com.autonavi.amap.mapcore.interfaces.IPolyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IPolyline@" + refId + "::getNearestLatLng(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.LatLng __result__;
                try {
                    __result__ = ref.getNearestLatLng(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IPolyline::setTransparency", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IPolyline ref = (com.autonavi.amap.mapcore.interfaces.IPolyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IPolyline@" + refId + "::setTransparency(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTransparency(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IPolyline::setCustomTexture", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.BitmapDescriptor var1 = (com.amap.api.maps.model.BitmapDescriptor) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IPolyline ref = (com.autonavi.amap.mapcore.interfaces.IPolyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IPolyline@" + refId + "::setCustomTexture(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCustomTexture(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IPolyline::setOptions", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.PolylineOptions var1 = (com.amap.api.maps.model.PolylineOptions) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IPolyline ref = (com.autonavi.amap.mapcore.interfaces.IPolyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IPolyline@" + refId + "::setOptions(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setOptions(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IPolyline::getOptions", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IPolyline ref = (com.autonavi.amap.mapcore.interfaces.IPolyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IPolyline@" + refId + "::getOptions(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.PolylineOptions __result__;
                try {
                    __result__ = ref.getOptions();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IPolyline::setCustemTextureIndex", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                java.util.List<Integer> var1 = (java.util.List<Integer>) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IPolyline ref = (com.autonavi.amap.mapcore.interfaces.IPolyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IPolyline@" + refId + "::setCustemTextureIndex(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCustemTextureIndex((ArrayList) var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IPolyline::setShownRatio", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IPolyline ref = (com.autonavi.amap.mapcore.interfaces.IPolyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IPolyline@" + refId + "::setShownRatio(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setShownRatio(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IPolyline::setShowRange", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IPolyline ref = (com.autonavi.amap.mapcore.interfaces.IPolyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IPolyline@" + refId + "::setShowRange(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setShowRange(new Double(var1).floatValue(), new Double(var2).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IPolyline::getShownRatio", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IPolyline ref = (com.autonavi.amap.mapcore.interfaces.IPolyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IPolyline@" + refId + "::getShownRatio(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getShownRatio();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IPolyline::setCustomTextureList", (__args__, __methodResult__) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                java.util.List<com.amap.api.maps.model.BitmapDescriptor> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    ((ArrayList<com.amap.api.maps.model.BitmapDescriptor>) var1).add((com.amap.api.maps.model.BitmapDescriptor) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IPolyline ref = (com.autonavi.amap.mapcore.interfaces.IPolyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IPolyline@" + refId + "::setCustomTextureList(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCustomTextureList((ArrayList) var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::setPeriod", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::setPeriod(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPeriod(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::getPeriod", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::getPeriod(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getPeriod();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::setIcons", (__args__, __methodResult__) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                java.util.ArrayList<com.amap.api.maps.model.BitmapDescriptor> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    ((ArrayList<com.amap.api.maps.model.BitmapDescriptor>) var1).add((com.amap.api.maps.model.BitmapDescriptor) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::setIcons(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setIcons((ArrayList) var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::getIcons", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::getIcons(" + "" + ")");
                }
            
                // invoke native method
                java.util.ArrayList<com.amap.api.maps.model.BitmapDescriptor> __result__;
                try {
                    __result__ = ref.getIcons();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.model.BitmapDescriptor item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::set2Top", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::set2Top(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.set2Top();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::setFlat", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::setFlat(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setFlat(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::isFlat", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::isFlat(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isFlat();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::setPerspective", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::setPerspective(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPerspective(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::isPerspective", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::isPerspective(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isPerspective();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::setTitle", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::setTitle(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTitle(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::getTitle", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::getTitle(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getTitle();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::setIcon", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.BitmapDescriptor var1 = (com.amap.api.maps.model.BitmapDescriptor) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::setIcon(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setIcon(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::setSnippet", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::setSnippet(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setSnippet(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::getSnippet", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::getSnippet(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getSnippet();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::setDraggable", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::setDraggable(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDraggable(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::isDraggable", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::isDraggable(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isDraggable();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::isRemoved", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::isRemoved(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isRemoved();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::showInfoWindow", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::showInfoWindow(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.showInfoWindow();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::hideInfoWindow", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::hideInfoWindow(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.hideInfoWindow();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::isInfoWindowShown", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::isInfoWindowShown(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isInfoWindowShown();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::setGeoPoint", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.autonavi.amap.mapcore.IPoint var1 = (com.autonavi.amap.mapcore.IPoint) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::setGeoPoint(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setGeoPoint(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::getGeoPoint", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::getGeoPoint(" + "" + ")");
                }
            
                // invoke native method
                com.autonavi.amap.mapcore.IPoint __result__;
                try {
                    __result__ = ref.getGeoPoint();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::getIMarkerAction", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::getIMarkerAction(" + "" + ")");
                }
            
                // invoke native method
                com.autonavi.amap.mapcore.interfaces.IMarkerAction __result__;
                try {
                    __result__ = ref.getIMarkerAction();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::setPositionByPixels", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::setPositionByPixels(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPositionByPixels(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::setBelowMaskLayer", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::setBelowMaskLayer(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBelowMaskLayer(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::setAnimation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.animation.Animation var1 = (com.amap.api.maps.model.animation.Animation) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::setAnimation(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setAnimation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::startAnimation", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::startAnimation(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.startAnimation();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IMarker::setAnimationListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IMarker ref = (com.autonavi.amap.mapcore.interfaces.IMarker) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IMarker@" + refId + "::setAnimationListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setAnimationListener(new com.amap.api.maps.model.animation.Animation.AnimationListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IMarker::setAnimationListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onAnimationStart() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onAnimationStart(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.animation.Animation.AnimationListener::onAnimationStart",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onAnimationEnd() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onAnimationEnd(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.animation.Animation.AnimationListener::onAnimationEnd",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMapListener::afterDrawFrame", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                com.autonavi.ae.gmap.GLMapState var2 = (com.autonavi.ae.gmap.GLMapState) getHEAP().get((int) ((Map<String, Object>) __args__).get("var2"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMapListener ref = (com.autonavi.amap.mapcore.interfaces.IAMapListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMapListener@" + refId + "::afterDrawFrame(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.afterDrawFrame(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMapListener::afterDrawLabel", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                com.autonavi.ae.gmap.GLMapState var2 = (com.autonavi.ae.gmap.GLMapState) getHEAP().get((int) ((Map<String, Object>) __args__).get("var2"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMapListener ref = (com.autonavi.amap.mapcore.interfaces.IAMapListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMapListener@" + refId + "::afterDrawLabel(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.afterDrawLabel(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMapListener::beforeDrawLabel", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                com.autonavi.ae.gmap.GLMapState var2 = (com.autonavi.ae.gmap.GLMapState) getHEAP().get((int) ((Map<String, Object>) __args__).get("var2"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMapListener ref = (com.autonavi.amap.mapcore.interfaces.IAMapListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMapListener@" + refId + "::beforeDrawLabel(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.beforeDrawLabel(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMapListener::afterRendererOver", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                com.autonavi.ae.gmap.GLMapState var2 = (com.autonavi.ae.gmap.GLMapState) getHEAP().get((int) ((Map<String, Object>) __args__).get("var2"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMapListener ref = (com.autonavi.amap.mapcore.interfaces.IAMapListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMapListener@" + refId + "::afterRendererOver(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.afterRendererOver(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMapListener::afterAnimation", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMapListener ref = (com.autonavi.amap.mapcore.interfaces.IAMapListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMapListener@" + refId + "::afterAnimation(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.afterAnimation();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IInfoWindowManager::setInfoWindowAnimation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.animation.Animation var1 = (com.amap.api.maps.model.animation.Animation) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IInfoWindowManager ref = (com.autonavi.amap.mapcore.interfaces.IInfoWindowManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IInfoWindowManager@" + refId + "::setInfoWindowAnimation(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowAnimation(var1, new com.amap.api.maps.model.animation.Animation.AnimationListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IInfoWindowManager::setInfoWindowAnimation::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onAnimationStart() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onAnimationStart(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.animation.Animation.AnimationListener::onAnimationStart",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onAnimationEnd() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onAnimationEnd(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.animation.Animation.AnimationListener::onAnimationEnd",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IInfoWindowManager::setInfoWindowAppearAnimation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.animation.Animation var1 = (com.amap.api.maps.model.animation.Animation) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IInfoWindowManager ref = (com.autonavi.amap.mapcore.interfaces.IInfoWindowManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IInfoWindowManager@" + refId + "::setInfoWindowAppearAnimation(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowAppearAnimation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IInfoWindowManager::setInfoWindowBackColor", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IInfoWindowManager ref = (com.autonavi.amap.mapcore.interfaces.IInfoWindowManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IInfoWindowManager@" + refId + "::setInfoWindowBackColor(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowBackColor(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IInfoWindowManager::setInfoWindowBackEnable", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IInfoWindowManager ref = (com.autonavi.amap.mapcore.interfaces.IInfoWindowManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IInfoWindowManager@" + refId + "::setInfoWindowBackEnable(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowBackEnable(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IInfoWindowManager::setInfoWindowBackScale", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IInfoWindowManager ref = (com.autonavi.amap.mapcore.interfaces.IInfoWindowManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IInfoWindowManager@" + refId + "::setInfoWindowBackScale(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowBackScale(new Double(var1).floatValue(), new Double(var2).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IInfoWindowManager::setInfoWindowDisappearAnimation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.animation.Animation var1 = (com.amap.api.maps.model.animation.Animation) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IInfoWindowManager ref = (com.autonavi.amap.mapcore.interfaces.IInfoWindowManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IInfoWindowManager@" + refId + "::setInfoWindowDisappearAnimation(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowDisappearAnimation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IInfoWindowManager::setInfoWindowMovingAnimation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.animation.Animation var1 = (com.amap.api.maps.model.animation.Animation) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IInfoWindowManager ref = (com.autonavi.amap.mapcore.interfaces.IInfoWindowManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IInfoWindowManager@" + refId + "::setInfoWindowMovingAnimation(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowMovingAnimation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IInfoWindowManager::startAnimation", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IInfoWindowManager ref = (com.autonavi.amap.mapcore.interfaces.IInfoWindowManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IInfoWindowManager@" + refId + "::startAnimation(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.startAnimation();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ITileOverlay::remove", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ITileOverlay ref = (com.autonavi.amap.mapcore.interfaces.ITileOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ITileOverlay@" + refId + "::remove(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.remove();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ITileOverlay::destroy", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ITileOverlay ref = (com.autonavi.amap.mapcore.interfaces.ITileOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ITileOverlay@" + refId + "::destroy(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.destroy(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ITileOverlay::clearTileCache", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ITileOverlay ref = (com.autonavi.amap.mapcore.interfaces.ITileOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ITileOverlay@" + refId + "::clearTileCache(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.clearTileCache();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ITileOverlay::getId", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ITileOverlay ref = (com.autonavi.amap.mapcore.interfaces.ITileOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ITileOverlay@" + refId + "::getId(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getId();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ITileOverlay::setZIndex", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ITileOverlay ref = (com.autonavi.amap.mapcore.interfaces.ITileOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ITileOverlay@" + refId + "::setZIndex(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setZIndex(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ITileOverlay::getZIndex", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ITileOverlay ref = (com.autonavi.amap.mapcore.interfaces.ITileOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ITileOverlay@" + refId + "::getZIndex(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getZIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ITileOverlay::setVisible", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ITileOverlay ref = (com.autonavi.amap.mapcore.interfaces.ITileOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ITileOverlay@" + refId + "::setVisible(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setVisible(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ITileOverlay::isVisible", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ITileOverlay ref = (com.autonavi.amap.mapcore.interfaces.ITileOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ITileOverlay@" + refId + "::isVisible(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isVisible();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ITileOverlay::equalsRemote", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.autonavi.amap.mapcore.interfaces.ITileOverlay var1 = (com.autonavi.amap.mapcore.interfaces.ITileOverlay) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ITileOverlay ref = (com.autonavi.amap.mapcore.interfaces.ITileOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ITileOverlay@" + refId + "::equalsRemote(" + var1 + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.equalsRemote(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ITileOverlay::hashCodeRemote", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ITileOverlay ref = (com.autonavi.amap.mapcore.interfaces.ITileOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ITileOverlay@" + refId + "::hashCodeRemote(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.hashCodeRemote();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IProjection::fromScreenLocation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.graphics.Point var1 = (android.graphics.Point) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IProjection ref = (com.autonavi.amap.mapcore.interfaces.IProjection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IProjection@" + refId + "::fromScreenLocation(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.LatLng __result__;
                try {
                    __result__ = ref.fromScreenLocation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IProjection::toScreenLocation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var1 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IProjection ref = (com.autonavi.amap.mapcore.interfaces.IProjection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IProjection@" + refId + "::toScreenLocation(" + var1 + ")");
                }
            
                // invoke native method
                android.graphics.Point __result__;
                try {
                    __result__ = ref.toScreenLocation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IProjection::toMapLocation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var1 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IProjection ref = (com.autonavi.amap.mapcore.interfaces.IProjection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IProjection@" + refId + "::toMapLocation(" + var1 + ")");
                }
            
                // invoke native method
                android.graphics.PointF __result__;
                try {
                    __result__ = ref.toMapLocation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IProjection::getVisibleRegion", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IProjection ref = (com.autonavi.amap.mapcore.interfaces.IProjection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IProjection@" + refId + "::getVisibleRegion(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.VisibleRegion __result__;
                try {
                    __result__ = ref.getVisibleRegion();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IProjection::toMapLenWithWin", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IProjection ref = (com.autonavi.amap.mapcore.interfaces.IProjection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IProjection@" + refId + "::toMapLenWithWin(" + var1 + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.toMapLenWithWin(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IProjection::fromBoundsToTile", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLngBounds var1 = (com.amap.api.maps.model.LatLngBounds) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IProjection ref = (com.autonavi.amap.mapcore.interfaces.IProjection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IProjection@" + refId + "::fromBoundsToTile(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.TileProjection __result__;
                try {
                    __result__ = ref.fromBoundsToTile(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IProjection::getMapBounds", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var1 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IProjection ref = (com.autonavi.amap.mapcore.interfaces.IProjection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IProjection@" + refId + "::getMapBounds(" + var1 + var2 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.LatLngBounds __result__;
                try {
                    __result__ = ref.getMapBounds(var1, new Double(var2).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IProjection::getCameraInfo", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IProjection ref = (com.autonavi.amap.mapcore.interfaces.IProjection) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IProjection@" + refId + "::getCameraInfo(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.AMapCameraInfo __result__;
                try {
                    __result__ = ref.getCameraInfo();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ICircle::setCenter", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var1 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ICircle ref = (com.autonavi.amap.mapcore.interfaces.ICircle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ICircle@" + refId + "::setCenter(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCenter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ICircle::getCenter", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ICircle ref = (com.autonavi.amap.mapcore.interfaces.ICircle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ICircle@" + refId + "::getCenter(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.LatLng __result__;
                try {
                    __result__ = ref.getCenter();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ICircle::setRadius", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                double var1 = (double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ICircle ref = (com.autonavi.amap.mapcore.interfaces.ICircle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ICircle@" + refId + "::setRadius(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRadius(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ICircle::getRadius", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ICircle ref = (com.autonavi.amap.mapcore.interfaces.ICircle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ICircle@" + refId + "::getRadius(" + "" + ")");
                }
            
                // invoke native method
                double __result__;
                try {
                    __result__ = ref.getRadius();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                double jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ICircle::setStrokeWidth", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ICircle ref = (com.autonavi.amap.mapcore.interfaces.ICircle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ICircle@" + refId + "::setStrokeWidth(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setStrokeWidth(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ICircle::getStrokeWidth", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ICircle ref = (com.autonavi.amap.mapcore.interfaces.ICircle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ICircle@" + refId + "::getStrokeWidth(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getStrokeWidth();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ICircle::setStrokeColor", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ICircle ref = (com.autonavi.amap.mapcore.interfaces.ICircle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ICircle@" + refId + "::setStrokeColor(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setStrokeColor(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ICircle::getStrokeColor", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ICircle ref = (com.autonavi.amap.mapcore.interfaces.ICircle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ICircle@" + refId + "::getStrokeColor(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getStrokeColor();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ICircle::setFillColor", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ICircle ref = (com.autonavi.amap.mapcore.interfaces.ICircle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ICircle@" + refId + "::setFillColor(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setFillColor(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ICircle::getFillColor", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ICircle ref = (com.autonavi.amap.mapcore.interfaces.ICircle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ICircle@" + refId + "::getFillColor(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getFillColor();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ICircle::contains", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var1 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ICircle ref = (com.autonavi.amap.mapcore.interfaces.ICircle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ICircle@" + refId + "::contains(" + var1 + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.contains(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ICircle::setHoleOptions", (__args__, __methodResult__) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                java.util.List<com.amap.api.maps.model.BaseHoleOptions> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    ((ArrayList<com.amap.api.maps.model.BaseHoleOptions>) var1).add((com.amap.api.maps.model.BaseHoleOptions) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ICircle ref = (com.autonavi.amap.mapcore.interfaces.ICircle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ICircle@" + refId + "::setHoleOptions(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setHoleOptions((ArrayList) var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ICircle::getHoleOptions", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ICircle ref = (com.autonavi.amap.mapcore.interfaces.ICircle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ICircle@" + refId + "::getHoleOptions(" + "" + ")");
                }
            
                // invoke native method
                java.util.List<com.amap.api.maps.model.BaseHoleOptions> __result__;
                try {
                    __result__ = ref.getHoleOptions();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.model.BaseHoleOptions item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ICircle::getDottedLineType", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ICircle ref = (com.autonavi.amap.mapcore.interfaces.ICircle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ICircle@" + refId + "::getDottedLineType(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getDottedLineType();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.ICircle::setDottedLineType", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.ICircle ref = (com.autonavi.amap.mapcore.interfaces.ICircle) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.ICircle@" + refId + "::setDottedLineType(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDottedLineType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getCameraPosition", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getCameraPosition(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.CameraPosition __result__;
                try {
                    __result__ = ref.getCameraPosition();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getMaxZoomLevel", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getMaxZoomLevel(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getMaxZoomLevel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getMinZoomLevel", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getMinZoomLevel(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getMinZoomLevel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::moveCamera", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.CameraUpdate var1 = (com.amap.api.maps.CameraUpdate) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::moveCamera(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.moveCamera(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::animateCamera", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.CameraUpdate var1 = (com.amap.api.maps.CameraUpdate) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::animateCamera(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.animateCamera(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::animateCameraWithCallback", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.CameraUpdate var1 = (com.amap.api.maps.CameraUpdate) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::animateCameraWithCallback(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.animateCameraWithCallback(var1, new com.amap.api.maps.AMap.CancelableCallback() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::animateCameraWithCallback::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onFinish() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onFinish(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.CancelableCallback::onFinish",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onCancel() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onCancel(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.CancelableCallback::onCancel",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::animateCameraWithDurationAndCallback", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.CameraUpdate var1 = (com.amap.api.maps.CameraUpdate) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
                // jsonable arg
                long var2 = (long) (int) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::animateCameraWithDurationAndCallback(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.animateCameraWithDurationAndCallback(var1, var2, new com.amap.api.maps.AMap.CancelableCallback() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::animateCameraWithDurationAndCallback::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onFinish() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onFinish(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.CancelableCallback::onFinish",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onCancel() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onCancel(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.CancelableCallback::onCancel",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::stopAnimation", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::stopAnimation(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.stopAnimation();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::addNavigateArrow", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.NavigateArrowOptions var1 = (com.amap.api.maps.model.NavigateArrowOptions) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::addNavigateArrow(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.NavigateArrow __result__;
                try {
                    __result__ = ref.addNavigateArrow(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::addPolyline", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.PolylineOptions var1 = (com.amap.api.maps.model.PolylineOptions) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::addPolyline(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.Polyline __result__;
                try {
                    __result__ = ref.addPolyline(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::addCircle", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.CircleOptions var1 = (com.amap.api.maps.model.CircleOptions) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::addCircle(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.Circle __result__;
                try {
                    __result__ = ref.addCircle(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::addArc", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.ArcOptions var1 = (com.amap.api.maps.model.ArcOptions) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::addArc(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.Arc __result__;
                try {
                    __result__ = ref.addArc(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::addPolygon", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.PolygonOptions var1 = (com.amap.api.maps.model.PolygonOptions) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::addPolygon(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.Polygon __result__;
                try {
                    __result__ = ref.addPolygon(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::addGroundOverlay", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.GroundOverlayOptions var1 = (com.amap.api.maps.model.GroundOverlayOptions) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::addGroundOverlay(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.GroundOverlay __result__;
                try {
                    __result__ = ref.addGroundOverlay(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::addMultiPointOverlay", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.MultiPointOverlayOptions var1 = (com.amap.api.maps.model.MultiPointOverlayOptions) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::addMultiPointOverlay(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.MultiPointOverlay __result__;
                try {
                    __result__ = ref.addMultiPointOverlay(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::addMarker", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.MarkerOptions var1 = (com.amap.api.maps.model.MarkerOptions) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::addMarker(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.Marker __result__;
                try {
                    __result__ = ref.addMarker(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::addMarkers", (__args__, __methodResult__) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                java.util.ArrayList<com.amap.api.maps.model.MarkerOptions> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    ((ArrayList<com.amap.api.maps.model.MarkerOptions>) var1).add((com.amap.api.maps.model.MarkerOptions) getHEAP().get(refId));
                }
                // jsonable arg
                boolean var2 = (boolean) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::addMarkers(" + var1 + var2 + ")");
                }
            
                // invoke native method
                java.util.ArrayList<com.amap.api.maps.model.Marker> __result__;
                try {
                    __result__ = ref.addMarkers((ArrayList) var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.model.Marker item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::addText", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.TextOptions var1 = (com.amap.api.maps.model.TextOptions) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::addText(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.Text __result__;
                try {
                    __result__ = ref.addText(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::addTileOverlay", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.TileOverlayOptions var1 = (com.amap.api.maps.model.TileOverlayOptions) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::addTileOverlay(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.TileOverlay __result__;
                try {
                    __result__ = ref.addTileOverlay(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::clear", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::clear(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.clear();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::clear__bool", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::clear(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.clear(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getMapType", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getMapType(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getMapType();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setMapType", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setMapType(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMapType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::isTrafficEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::isTrafficEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isTrafficEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setTrafficEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setTrafficEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTrafficEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::isIndoorEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::isIndoorEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isIndoorEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setIndoorEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setIndoorEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setIndoorEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::set3DBuildingEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::set3DBuildingEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.set3DBuildingEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::isMyLocationEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::isMyLocationEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isMyLocationEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setMyLocationEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setMyLocationEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMyLocationEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setLoadOfflineData", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setLoadOfflineData(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLoadOfflineData(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setMyLocationStyle", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.MyLocationStyle var1 = (com.amap.api.maps.model.MyLocationStyle) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setMyLocationStyle(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMyLocationStyle(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setMyLocationType", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setMyLocationType(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMyLocationType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getMapScreenMarkers", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getMapScreenMarkers(" + "" + ")");
                }
            
                // invoke native method
                java.util.List<com.amap.api.maps.model.Marker> __result__;
                try {
                    __result__ = ref.getMapScreenMarkers();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.model.Marker item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setMapTextEnable", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setMapTextEnable(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMapTextEnable(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setRoadArrowEnable", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setRoadArrowEnable(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRoadArrowEnable(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setMyTrafficStyle", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.MyTrafficStyle var1 = (com.amap.api.maps.model.MyTrafficStyle) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setMyTrafficStyle(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMyTrafficStyle(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getMyLocation", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getMyLocation(" + "" + ")");
                }
            
                // invoke native method
                android.location.Location __result__;
                try {
                    __result__ = ref.getMyLocation();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setLocationSource", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.LocationSource var1 = (com.amap.api.maps.LocationSource) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setLocationSource(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLocationSource(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setMyLocationRotateAngle", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setMyLocationRotateAngle(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMyLocationRotateAngle(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getAMapUiSettings", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getAMapUiSettings(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.UiSettings __result__;
                try {
                    __result__ = ref.getAMapUiSettings();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getAMapProjection", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getAMapProjection(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.Projection __result__;
                try {
                    __result__ = ref.getAMapProjection();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setOnCameraChangeListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setOnCameraChangeListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnCameraChangeListener(new com.amap.api.maps.AMap.OnCameraChangeListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::setOnCameraChangeListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onCameraChange(com.amap.api.maps.model.CameraPosition var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onCameraChange(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnCameraChangeListener::onCameraChange",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onCameraChangeFinish(com.amap.api.maps.model.CameraPosition var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onCameraChangeFinish(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnCameraChangeListener::onCameraChangeFinish",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setOnMapClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setOnMapClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnMapClickListener(new com.amap.api.maps.AMap.OnMapClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::setOnMapClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMapClick(com.amap.api.maps.model.LatLng var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMapClickListener::onMapClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setOnMapTouchListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setOnMapTouchListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnMapTouchListener(new com.amap.api.maps.AMap.OnMapTouchListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::setOnMapTouchListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onTouch(android.view.MotionEvent var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onTouch(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMapTouchListener::onTouch",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setOnMapLongClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setOnMapLongClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnMapLongClickListener(new com.amap.api.maps.AMap.OnMapLongClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::setOnMapLongClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMapLongClick(com.amap.api.maps.model.LatLng var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapLongClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMapLongClickListener::onMapLongClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setOnMarkerClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setOnMarkerClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnMarkerClickListener(new com.amap.api.maps.AMap.OnMarkerClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::setOnMarkerClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public boolean onMarkerClick(com.amap.api.maps.model.Marker var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMarkerClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMarkerClickListener::onMarkerClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
                            return true;
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setOnPolylineClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setOnPolylineClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnPolylineClickListener(new com.amap.api.maps.AMap.OnPolylineClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::setOnPolylineClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onPolylineClick(com.amap.api.maps.model.Polyline var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onPolylineClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnPolylineClickListener::onPolylineClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setOnMarkerDragListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setOnMarkerDragListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnMarkerDragListener(new com.amap.api.maps.AMap.OnMarkerDragListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::setOnMarkerDragListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMarkerDragStart(com.amap.api.maps.model.Marker var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMarkerDragStart(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMarkerDragListener::onMarkerDragStart",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onMarkerDrag(com.amap.api.maps.model.Marker var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMarkerDrag(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMarkerDragListener::onMarkerDrag",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onMarkerDragEnd(com.amap.api.maps.model.Marker var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMarkerDragEnd(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMarkerDragListener::onMarkerDragEnd",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setOnMaploadedListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setOnMaploadedListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnMaploadedListener(new com.amap.api.maps.AMap.OnMapLoadedListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::setOnMaploadedListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMapLoaded() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapLoaded(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMapLoadedListener::onMapLoaded",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setOnInfoWindowClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setOnInfoWindowClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnInfoWindowClickListener(new com.amap.api.maps.AMap.OnInfoWindowClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::setOnInfoWindowClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onInfoWindowClick(com.amap.api.maps.model.Marker var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onInfoWindowClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnInfoWindowClickListener::onInfoWindowClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setOnMyLocationChangeListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setOnMyLocationChangeListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnMyLocationChangeListener(new com.amap.api.maps.AMap.OnMyLocationChangeListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::setOnMyLocationChangeListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMyLocationChange(android.location.Location var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMyLocationChange(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMyLocationChangeListener::onMyLocationChange",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setOnPOIClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setOnPOIClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnPOIClickListener(new com.amap.api.maps.AMap.OnPOIClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::setOnPOIClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onPOIClick(com.amap.api.maps.model.Poi var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onPOIClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnPOIClickListener::onPOIClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setInfoWindowAdapter__com_amap_api_maps_AMap_InfoWindowAdapter", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.AMap.InfoWindowAdapter var1 = (com.amap.api.maps.AMap.InfoWindowAdapter) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setInfoWindowAdapter(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowAdapter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setInfoWindowAdapter__com_amap_api_maps_AMap_CommonInfoWindowAdapter", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setInfoWindowAdapter(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowAdapter(new com.amap.api.maps.AMap.CommonInfoWindowAdapter() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::setInfoWindowAdapter__com_amap_api_maps_AMap_CommonInfoWindowAdapter::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public com.amap.api.maps.InfoWindowParams getInfoWindowParams(com.amap.api.maps.model.BasePointOverlay var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: getInfoWindowParams(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.CommonInfoWindowAdapter::getInfoWindowParams",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
                            return null;
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setOnIndoorBuildingActiveListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setOnIndoorBuildingActiveListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnIndoorBuildingActiveListener(new com.amap.api.maps.AMap.OnIndoorBuildingActiveListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::setOnIndoorBuildingActiveListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void OnIndoorBuilding(com.amap.api.maps.model.IndoorBuildingInfo var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: OnIndoorBuilding(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnIndoorBuildingActiveListener::OnIndoorBuilding",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getMapPrintScreen", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getMapPrintScreen(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.getMapPrintScreen(new com.amap.api.maps.AMap.onMapPrintScreenListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::getMapPrintScreen::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMapPrint(android.graphics.drawable.Drawable var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapPrint(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.onMapPrintScreenListener::onMapPrint",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getMapScreenShot", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getMapScreenShot(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.getMapScreenShot(new com.amap.api.maps.AMap.OnMapScreenShotListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::getMapScreenShot::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMapScreenShot(android.graphics.Bitmap var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapScreenShot(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMapScreenShotListener::onMapScreenShot__android_graphics_Bitmap",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onMapScreenShot(android.graphics.Bitmap var1, int var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapScreenShot(" + var1 + var2 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
                            // jsonable arg
                            int argvar2 = var2;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMapScreenShotListener::onMapScreenShot__android_graphics_Bitmap__int",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                            put("var2", argvar2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getScalePerPixel", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getScalePerPixel(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getScalePerPixel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setRunLowFrame", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setRunLowFrame(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRunLowFrame(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::removecache", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::removecache(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.removecache();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::removecache__com_amap_api_maps_AMap_OnCacheRemoveListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::removecache(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.removecache(new com.amap.api.maps.AMap.OnCacheRemoveListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::removecache__com_amap_api_maps_AMap_OnCacheRemoveListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onRemoveCacheFinish(boolean var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onRemoveCacheFinish(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            boolean argvar1 = var1;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnCacheRemoveListener::onRemoveCacheFinish",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setCenterToPixel", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setCenterToPixel(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCenterToPixel(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setMapTextZIndex", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setMapTextZIndex(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMapTextZIndex(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getMapTextZIndex", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getMapTextZIndex(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getMapTextZIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::reloadMap", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::reloadMap(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.reloadMap();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setRenderFps", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setRenderFps(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRenderFps(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setIndoorBuildingInfo", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.IndoorBuildingInfo var1 = (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setIndoorBuildingInfo(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setIndoorBuildingInfo(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setAMapGestureListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setAMapGestureListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setAMapGestureListener(new com.amap.api.maps.model.AMapGestureListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.autonavi.amap.mapcore.interfaces.IAMap::setAMapGestureListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onDoubleTap(float var1, float var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onDoubleTap(" + var1 + var2 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            float argvar1 = var1;
                            // jsonable arg
                            float argvar2 = var2;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.AMapGestureListener::onDoubleTap",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                            put("var2", argvar2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onSingleTap(float var1, float var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onSingleTap(" + var1 + var2 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            float argvar1 = var1;
                            // jsonable arg
                            float argvar2 = var2;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.AMapGestureListener::onSingleTap",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                            put("var2", argvar2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onFling(float var1, float var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onFling(" + var1 + var2 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            float argvar1 = var1;
                            // jsonable arg
                            float argvar2 = var2;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.AMapGestureListener::onFling",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                            put("var2", argvar2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onScroll(float var1, float var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onScroll(" + var1 + var2 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            float argvar1 = var1;
                            // jsonable arg
                            float argvar2 = var2;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.AMapGestureListener::onScroll",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                            put("var2", argvar2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onLongPress(float var1, float var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onLongPress(" + var1 + var2 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            float argvar1 = var1;
                            // jsonable arg
                            float argvar2 = var2;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.AMapGestureListener::onLongPress",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                            put("var2", argvar2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onDown(float var1, float var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onDown(" + var1 + var2 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            float argvar1 = var1;
                            // jsonable arg
                            float argvar2 = var2;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.AMapGestureListener::onDown",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                            put("var2", argvar2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onUp(float var1, float var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onUp(" + var1 + var2 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            float argvar1 = var1;
                            // jsonable arg
                            float argvar2 = var2;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.AMapGestureListener::onUp",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                            put("var2", argvar2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onMapStable() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapStable(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.AMapGestureListener::onMapStable",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getZoomToSpanLevel", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLng var1 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
                // ref arg
                com.amap.api.maps.model.LatLng var2 = (com.amap.api.maps.model.LatLng) getHEAP().get((int) ((Map<String, Object>) __args__).get("var2"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getZoomToSpanLevel(" + var1 + var2 + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getZoomToSpanLevel(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getInfoWindowAnimationManager", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getInfoWindowAnimationManager(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.InfoWindowAnimationManager __result__;
                try {
                    __result__ = ref.getInfoWindowAnimationManager();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setMaskLayerParams", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) __args__).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) __args__).get("var5");
                // jsonable arg
                long var6 = (long) (int) ((Map<String, Object>) __args__).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setMaskLayerParams(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMaskLayerParams(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setMaxZoomLevel", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setMaxZoomLevel(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMaxZoomLevel(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setMinZoomLevel", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setMinZoomLevel(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMinZoomLevel(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::resetMinMaxZoomPreference", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::resetMinMaxZoomPreference(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.resetMinMaxZoomPreference();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setMapStatusLimits", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.LatLngBounds var1 = (com.amap.api.maps.model.LatLngBounds) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setMapStatusLimits(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMapStatusLimits(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setCustomMapStylePath", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setCustomMapStylePath(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCustomMapStylePath(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setMapCustomEnable", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setMapCustomEnable(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMapCustomEnable(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::onChangeFinish", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::onChangeFinish(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onChangeFinish();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setZoomScaleParam", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setZoomScaleParam(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setZoomScaleParam(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::onFling", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::onFling(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onFling();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getMapWidth", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getMapWidth(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getMapWidth();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getMapHeight", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getMapHeight(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getMapHeight();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getCameraAngle", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getCameraAngle(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getCameraAngle();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getSkyHeight", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getSkyHeight(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getSkyHeight();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::isMaploaded", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::isMaploaded(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isMaploaded();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getMapConfig", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getMapConfig(" + "" + ")");
                }
            
                // invoke native method
                com.autonavi.amap.mapcore.MapConfig __result__;
                try {
                    __result__ = ref.getMapConfig();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getView", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getView(" + "" + ")");
                }
            
                // invoke native method
                android.view.View __result__;
                try {
                    __result__ = ref.getView();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setZOrderOnTop", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setZOrderOnTop(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setZOrderOnTop(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::destroy", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setVisibilityEx", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setVisibilityEx(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setVisibilityEx(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::onActivityPause", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::onActivityPause(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onActivityPause();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::onActivityResume", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::onActivityResume(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onActivityResume();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::createGLOverlay", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::createGLOverlay(" + var1 + ")");
                }
            
                // invoke native method
                long __result__;
                try {
                    __result__ = ref.createGLOverlay(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getGlOverlayMgrPtr", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getGlOverlayMgrPtr(" + "" + ")");
                }
            
                // invoke native method
                long __result__;
                try {
                    __result__ = ref.getGlOverlayMgrPtr();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::addCrossVector", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.amap.api.maps.model.CrossOverlayOptions var1 = (com.amap.api.maps.model.CrossOverlayOptions) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::addCrossVector(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.CrossOverlay __result__;
                try {
                    __result__ = ref.addCrossVector(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::addNaviRouteOverlay", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::addNaviRouteOverlay(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.RouteOverlay __result__;
                try {
                    __result__ = ref.addNaviRouteOverlay();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::removeEngineGLOverlay", (__args__, __methodResult__) -> {
                // args
                // ref arg
                com.autonavi.ae.gmap.gloverlay.BaseMapOverlay var1 = (com.autonavi.ae.gmap.gloverlay.BaseMapOverlay) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::removeEngineGLOverlay(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.removeEngineGLOverlay(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getViewMatrix", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getViewMatrix(" + "" + ")");
                }
            
                // invoke native method
                float[] __result__;
                try {
                    __result__ = ref.getViewMatrix();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float[] jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getProjectionMatrix", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getProjectionMatrix(" + "" + ")");
                }
            
                // invoke native method
                float[] __result__;
                try {
                    __result__ = ref.getProjectionMatrix();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float[] jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::addOverlayTexture", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                com.autonavi.ae.gmap.gloverlay.GLTextureProperty var2 = (com.autonavi.ae.gmap.gloverlay.GLTextureProperty) getHEAP().get((int) ((Map<String, Object>) __args__).get("var2"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::addOverlayTexture(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.addOverlayTexture(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::onTouchEvent", (__args__, __methodResult__) -> {
                // args
                // ref arg
                android.view.MotionEvent var1 = (android.view.MotionEvent) getHEAP().get((int) ((Map<String, Object>) __args__).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::onTouchEvent(" + var1 + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.onTouchEvent(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::canStopMapRender", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::canStopMapRender(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.canStopMapRender();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::setCustomTextureResourcePath", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::setCustomTextureResourcePath(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCustomTextureResourcePath(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getMyLocationStyle", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getMyLocationStyle(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.MyLocationStyle __result__;
                try {
                    __result__ = ref.getMyLocationStyle();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getRenderMode", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getRenderMode(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getRenderMode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::destroySurface", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::destroySurface(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.destroySurface(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::requestRender", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::requestRender(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.requestRender();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::resetRenderTime", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::resetRenderTime(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.resetRenderTime();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::onIndoorBuildingActivity", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::onIndoorBuildingActivity(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.onIndoorBuildingActivity(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.autonavi.amap.mapcore.interfaces.IAMap::getCamerInfo", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.autonavi.amap.mapcore.interfaces.IAMap ref = (com.autonavi.amap.mapcore.interfaces.IAMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.autonavi.amap.mapcore.interfaces.IAMap@" + refId + "::getCamerInfo(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.AMapCameraInfo __result__;
                try {
                    __result__ = ref.getCamerInfo();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
        }};
    }
}
