// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_map_fluttify/src/ios/ios.export.g.dart';
import 'package:amap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

class MAParticleOverlay extends MAShape with MAAnnotation, MAOverlay {
  //region constants
  
  //endregion

  //region creators
  static Future<MAParticleOverlay> create__() async {
    final int refId = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('ObjectFactory::createMAParticleOverlay');
    final object = MAParticleOverlay()..refId = refId..tag = 'amap_map_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  //endregion

  //region getters
  Future<MAParticleOverlayOptions> get_overlayOption() async {
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod("MAParticleOverlay::get_overlayOption", {'refId': refId});
    kNativeObjectPool.add(MAParticleOverlayOptions()..refId = result..tag = 'amap_map_fluttify');
    return MAParticleOverlayOptions()..refId = result..tag = 'amap_map_fluttify';
  }
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  static Future<MAParticleOverlay> particleOverlayWithOption(MAParticleOverlayOptions option) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: MAParticleOverlay::particleOverlayWithOption([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('MAParticleOverlay::particleOverlayWithOption', {"option": option.refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
      kNativeObjectPool.add(MAParticleOverlay()..refId = result..tag = 'amap_map_fluttify');
      return MAParticleOverlay()..refId = result..tag = 'amap_map_fluttify';
    }
  }
  
  Future<void> updateOverlayOption(MAParticleOverlayOptions overlayOption) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: MAParticleOverlay@$refId::updateOverlayOption([])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/amap_map_fluttify').invokeMethod('MAParticleOverlay::updateOverlayOption', {"overlayOption": overlayOption.refId, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  //endregion
}